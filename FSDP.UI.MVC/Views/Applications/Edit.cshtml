@model FSDP.DATA.EF.Application

@{
    ViewBag.Title = "Edit";
}

<section class="py-5">
    <div class="container py-5">
        <div class="row text-center">
            <div class="col-lg-9 mx-auto">
                <div class="card border-0 shadow">
                    <div class="card-body p-5">
                        <h2 class="h3 mb-4 text-center">Update Application Info</h2>
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ApplicationId)

                            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                            {
                                <div class="form-group">
                                    <h6>Applicant</h6>
                                    <div class="col-md-10 mx-auto text-center">
                                        @Html.DisplayFor(model => Model.UserDetail.FirstName) @Html.DisplayFor(model => Model.UserDetail.LastName)
                                    </div>
                                </div>
                            }

                            <div class="form-group">
                                <h6>Date Applied</h6>
                                <div class="col-md-10 mx-auto">
                                    @Html.DisplayFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control text-center" } })
                                    @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <h6>Position</h6>
                                <div class="col-md-10 mx-auto">
                                    @Html.DisplayFor(model => model.OpenPosition.Position.Title, new { htmlAttributes = new { @class = "form-control text-center" } })
                                    @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <h6>Location</h6>
                                <div class="col-md-10 mx-auto">
                                    @Html.DisplayFor(model => model.OpenPosition.Location.City, new { htmlAttributes = new { @class = "form-control text-center" } })
                                    @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                            {
                                <div class="form-group">
                                    <h6>Notes</h6>
                                    <div class="col-md-10 mx-auto">
                                        @Html.EditorFor(model => model.ManagerNotes, new { htmlAttributes = new { @class = "form-control text-center" } })
                                        @Html.ValidationMessageFor(model => model.ManagerNotes, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <h6>Status</h6>
                                    <div class="col-md-10 mx-auto">
                                        @Html.DropDownList("ApplicationStatus", null, htmlAttributes: new { @class = "form-control text-center" })
                                        @Html.ValidationMessageFor(model => model.ApplicationStatus, "", new { @class = "text-danger text-center" })
                                    </div>
                                </div>
                            }

                            @if (User.IsInRole("Employee") && !User.IsInRole("Manager"))
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ResumeFilename, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10 mx-auto">
                                        @Html.EditorFor(model => model.ResumeFilename, new { htmlAttributes = new { @class = "form-control text-center" } })
                                        @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                            {
                                <div class="form-group">
                                    <h6>Resume</h6>
                                    <div class="col-md-10 mx-auto">
                                        @Html.DisplayFor(model => model.ResumeFilename, new { htmlAttributes = new { @class = "form-control text-center" } })
                                        @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }

                            <div class="form-group">
                                <div class="col-md-10 mx-auto">
                                    <input type="submit" value="Save" class="btn btn-dark" />
                                </div>
                            </div>
                        </div>
                                }

                                <div>
                                    @Html.ActionLink("Back to List", "Index")
                                </div>
                            </div>
                        </div>
            </div>
        </div>
    </div>
</section>